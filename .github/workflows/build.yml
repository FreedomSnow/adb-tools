name: Build and Release

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  release:
    types: [ published ]

jobs:
  build:
    strategy:
      matrix:
        # GitHub Actions支持免费的macOS构建（公共仓库）
        os: [ubuntu-latest, windows-latest, macos-latest]
        node-version: [18, 20]

    runs-on: ${{ matrix.os }}

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Install dependencies
      run: |
        npm ci
        npm run download-adb

    - name: Build application
      run: npm run electron:build

    - name: Build for Linux
      if: matrix.os == 'ubuntu-latest' && matrix.node-version == 20
      run: npm run build:linux

    - name: Build for macOS
      if: matrix.os == 'macos-latest' && matrix.node-version == 20
      run: npm run build:mac

    - name: Build for Windows
      if: matrix.os == 'windows-latest' && matrix.node-version == 20
      run: npm run build:win

    - name: Upload artifacts
      uses: actions/upload-artifact@v4
      with:
        name: build-${{ matrix.os }}-node${{ matrix.node-version }}
        path: release/
      # 只上传 Node.js 20 的构建结果用于发布
      if: matrix.node-version == 20

  release:
    needs: build
    runs-on: ubuntu-latest
    if: github.event_name == 'release'
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download artifacts
      uses: actions/download-artifact@v4
      with:
        path: artifacts/

    - name: Prepare release files
      run: |
        mkdir -p release-files
        find artifacts/ -name "*.exe" -exec cp {} release-files/ \;
        find artifacts/ -name "*.dmg" -exec cp {} release-files/ \;
        find artifacts/ -name "*.AppImage" -exec cp {} release-files/ \;
        find artifacts/ -name "*.zip" -exec cp {} release-files/ \;
        ls -la release-files/

    - name: Release to GitHub
      uses: softprops/action-gh-release@v1
      with:
        files: release-files/*
        draft: true
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 